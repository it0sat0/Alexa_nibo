"use strict";
const Alexa = require("alexa-sdk");
 

// Alexa スキル実装時のおまじない部分

exports.handler = function (event, context)
 {

    const alexa = Alexa.handler(event, context);

    //alexa.appId = ;

    alexa.registerHandlers(handlers, handler1);

    alexa.execute();

};


const languageStrings = { 
    "ja": {  // 今回は日本語のみ対応します.

        translation: {

            ANSER_MESSAGE: "にぼーーーーーーー",

            HELP_MESSAGE: "にぼにぼしようぜ",

            STOP_MESSAGE: "スキルを終了します。",

        },

    },

};


const handlers = {


    'Unhandled': function () {

        this.emit(':ask', 'にぼ食べないんですか');

    },

    
// 起動

    "LaunchRequest": function () {

        this.handler.state = 'Mode'

        this.emit("AMAZON.HelpIntent");

    },

    
// ヘルプとか言ったとき
    "AMAZON.HelpIntent": function () {

        const speechOutput = this.t("HELP_MESSAGE");

        this.emit(":ask", speechOutput);

    },

    
// キャンセルとか言ったとき

    "AMAZON.CancelIntent": function () {

        this.emit("AMAZON.StopIntent");

    },


    // ストップとか言ったとき
    "AMAZON.StopIntent": function () {

        const speechOutput = this.t("STOP_MESSAGE");

        this.emit(speechOutput);

    }

};


const handler1 = Alexa.CreateStateHandler('Mode', {

    // にぼとか言ったとき
    "Nibo_test": function() {

        const Menu_of_Nibo = this.event.request.intent.slots.Menu_of_Nibo.value;

        const Rou_of_Nibo = this.event.request.intent.slots.Rou_of_Nibo.value;

        this.emit(":ask", '{Menu_of_Nibo}{Rou_of_Nibo}を食べますか');

    },

    "Nibo_Store_test": function() {

        const Store_of_Nibo = this.event.request.intent.slots.Store_of_Nibo.value;

        this.emit(":ask", 'もちろん{Store_of_Nibo}ですね');

    },

    "Nibo_talk_test": function() {

        const Talk_of_Nibo = this.event.request.intent.slots.Talk_of_Nibo.value;

        this.emit(":ask", '{Talk_of_Nibo}');

    }

});

